name: Publish released containers

on:
  release:
    types:
      - created

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - 
        name: Checkout
        uses: actions/checkout@v4
      - 
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3  # https://github.com/docker/setup-qemu-action
      - 
        name: Set up Docker
        uses: docker/setup-buildx-action@v3  # https://github.com/docker/setup-buildx-action
      - 
        name: Login to registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3  # https://github.com/docker/login-action
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - 
        name: Extract Docker metadata for app
        id: metadata-app
        uses: docker/metadata-action@v5  # https://github.com/docker/metadata-action
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-app
      - 
        name: Extract Docker metadata for front
        id: metadata
        uses: docker/metadata-action@v5  # https://github.com/docker/metadata-action
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-front
      - 
        name: Extract GO_VERSION
        id: extract
        run: |
          if [ -f go.mod ]; then
            go_version=$(awk -F ' ' '$1 == "go" { print $2 }' go.mod)
            echo "::set-output name=go_version::${go_version}"
          else
            echo "::set-output name=go_version::"
          fi
      - 
        name: Build and push app
        uses: docker/build-push-action@v5  # https://github.com/docker/build-push-action
        with:
          push: true
          context: images/app
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.metadata-app.outputs.tags }} # ${{ github.repository }}:${{ steps.tag_version.outputs.new_tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: GO_VERSION=${{ steps.extract.outputs.go_version }}
      - 
        name: Build and push front
        uses: docker/build-push-action@v5  # https://github.com/docker/build-push-action
        with:
          push: true
          context: images/front
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.metadata-front.outputs.tags }} # ${{ github.repository }}:${{ steps.tag_version.outputs.new_tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: GO_VERSION=${{ steps.extract.outputs.go_version }}
    

