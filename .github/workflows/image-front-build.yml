name: front container build

on:
  push:
    paths:
      - 'images/front/*'
      - versions.txt

env:
  TARGET: front
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-front
      
jobs:

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - 
        name: Checkout
        uses: actions/checkout@v4
      - 
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3  # https://github.com/docker/setup-qemu-action
      - 
        name: Set up Docker
        uses: docker/setup-buildx-action@v3  # https://github.com/docker/setup-buildx-action
      - 
        name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4.5.0
      - 
        name: Import versions.txt
        id: versions
        run: |
          for file in versions.txt images/${{ env.TARGET }}/versions.txt
          do
            [[ ! -f $file ]] && continue
            echo "-- Read $file"
            while IFS== read k v
            do
              [[ $k =~ \s*# ]] && continue
              echo "${k}=${v}"
              echo "${k}=${v}" >> $GITHUB_OUTPUT
              echo "${k}_SHORT=${v/@sha256*}"
              echo "${k}_SHORT=${v/@sha256*}" >> $GITHUB_OUTPUT
            done < "$file"
          done
      - 
        name: Login to registry ${{ env.REGISTRY }}
        if: ${{ github.ref_name == 'main' }}
        uses: docker/login-action@v3  # https://github.com/docker/login-action
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - 
        name: Extract Docker metadata for app
        id: metadata-app
        if: ${{ github.ref_name == 'main' }}
        uses: docker/metadata-action@v5  # https://github.com/docker/metadata-action
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - 
        name: Build app
        uses: docker/build-push-action@v6  # https://github.com/docker/build-push-action
        with:
          push: ${{ github.ref_name == 'main' }}
          context: images/${{ env.TARGET }}
          platforms: linux/amd64
          build-args: |
            AENERIA_VERSION=${{ steps.versions.outputs.AENERIA_VERSION }}
            NODE_VERSION=${{ steps.versions.outputs.NODE_VERSION }}
            NGINX_VERSION=${{ steps.versions.outputs.NGINX_VERSION }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.versions.outputs.AENERIA_VERSION_SHORT }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.versions.outputs.AENERIA_VERSION_SHORT }}-nginx${{ steps.versions.outputs.NGINX_VERSION_SHORT }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
